{"ast":null,"code":"var _jsxFileName = \"/Users/abalamurugan/Desktop/photo-app-react/src/LikeButton.js\";\nimport React from 'react';\nimport { getHeaders } from './utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LikeButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleLike = this.toggleLike.bind(this);\n    this.like = this.like.bind(this);\n    this.unlike = this.unlike.bind(this); // this.remakePost = this.props.remakePost.bind(this);\n  }\n\n  toggleLike() {\n    if (this.props.likeId) {\n      this.unlike();\n    } else {\n      this.like();\n    }\n  }\n\n  like() {\n    console.log(\"LIKE\"); // const postId = this.props.postId;\n\n    const url = `/api/posts/likes`;\n    const postData = {\n      post_id: this.props.postId\n    };\n    fetch(url, {\n      headers: getHeaders(),\n      method: 'POST',\n      body: JSON.stringify(postData)\n    }).then(response => response.json()).then(data => {// this.props.remakePost();\n    });\n  }\n\n  unlike() {\n    console.log(\"UNLIKE\"); // const postId = this.props.postId;\n\n    const url = '/api/posts/likes/' + this.props.likeId;\n    fetch(url, {\n      method: 'DELETE',\n      headers: getHeaders()\n    }).then(response => response.json()).then(data => {\n      // this.props.remakePost()\n      console.log(data);\n    });\n  }\n\n  render() {\n    const likeId = this.props.likeId;\n    const classFill = likeId ? 'fas' : 'far';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.toggleLike,\n      \"aria-label\": \"Like Button\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: classFill + ' fa-heart'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LikeButton;","map":{"version":3,"sources":["/Users/abalamurugan/Desktop/photo-app-react/src/LikeButton.js"],"names":["React","getHeaders","LikeButton","Component","constructor","props","toggleLike","bind","like","unlike","likeId","console","log","url","postData","post_id","postId","fetch","headers","method","body","JSON","stringify","then","response","json","data","render","classFill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,YAAzB;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd,CALe,CAMf;AACH;;AAEDD,EAAAA,UAAU,GAAI;AACV,QAAG,KAAKD,KAAL,CAAWK,MAAd,EAAsB;AAClB,WAAKD,MAAL;AACH,KAFD,MAEO;AACH,WAAKD,IAAL;AACH;AACJ;;AACDA,EAAAA,IAAI,GAAI;AACJG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADI,CAEJ;;AACA,UAAMC,GAAG,GAAI,kBAAb;AACA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAG,KAAKV,KAAL,CAAWW;AADR,KAAjB;AAGAC,IAAAA,KAAK,CAACJ,GAAD,EAAM;AACPK,MAAAA,OAAO,EAAEjB,UAAU,EADZ;AAEPkB,MAAAA,MAAM,EAAE,MAFD;AAGPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAHC,KAAN,CAAL,CAKCS,IALD,CAKMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALlB,EAMCF,IAND,CAMMG,IAAI,IAAI,CACV;AACH,KARD;AASH;;AAEDjB,EAAAA,MAAM,GAAI;AACNE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADM,CAEN;;AACA,UAAMC,GAAG,GAAI,sBAAsB,KAAKR,KAAL,CAAWK,MAA9C;AACAO,IAAAA,KAAK,CAACJ,GAAD,EAAM;AACPM,MAAAA,MAAM,EAAE,QADD;AAEPD,MAAAA,OAAO,EAAEjB,UAAU;AAFZ,KAAN,CAAL,CAICsB,IAJD,CAIMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJlB,EAKCF,IALD,CAKMG,IAAI,IAAI;AACV;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AACH,KARD;AASH;;AAEDC,EAAAA,MAAM,GAAI;AACN,UAAMjB,MAAM,GAAG,KAAKL,KAAL,CAAWK,MAA1B;AACA,UAAMkB,SAAS,GAAGlB,MAAM,GAAG,KAAH,GAAW,KAAnC;AACA,wBACI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,UAAtB;AACQ,oBAAW,aADnB;AAAA,6BAQI;AAAG,QAAA,SAAS,EAAEsB,SAAS,GAAG;AAA1B;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAlEoC;;AAqEzC,eAAe1B,UAAf","sourcesContent":["import React from 'react';\nimport {getHeaders} from './utils.js';\n\nclass LikeButton extends React.Component { \n\n    constructor(props) {\n        super(props);\n\n        this.toggleLike = this.toggleLike.bind(this);\n        this.like = this.like.bind(this);\n        this.unlike = this.unlike.bind(this);\n        // this.remakePost = this.props.remakePost.bind(this);\n    }\n\n    toggleLike () {\n        if(this.props.likeId) {\n            this.unlike();\n        } else {\n            this.like();\n        }\n    }\n    like () {\n        console.log(\"LIKE\");\n        // const postId = this.props.postId;\n        const url = `/api/posts/likes`\n        const postData = {\n            post_id : this.props.postId\n        }\n        fetch(url, {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify(postData),\n        })\n        .then(response => response.json())\n        .then(data => {\n            // this.props.remakePost();\n        })\n    }\n\n    unlike () {\n        console.log(\"UNLIKE\");\n        // const postId = this.props.postId;\n        const url =  '/api/posts/likes/' + this.props.likeId;\n        fetch(url, {\n            method: 'DELETE',\n            headers: getHeaders(),\n        })\n        .then(response => response.json())\n        .then(data => {\n            // this.props.remakePost()\n            console.log(data)\n        })\n    }\n\n    render () {\n        const likeId = this.props.likeId;\n        const classFill = likeId ? 'fas' : 'far';\n        return (\n            <button onClick={this.toggleLike}\n                    aria-label=\"Like Button\" >\n            \n            {/* role=\"switch\"\n            className='like'\n                aria-label=\"Like Button\" \n                aria-checked={likeId ? true : false}\n                onClick={this.toggleLike}> */}\n                <i className={classFill + ' fa-heart'}></i>\n            </button>\n        ); \n    }\n\n}\nexport default LikeButton;"]},"metadata":{},"sourceType":"module"}