{"ast":null,"code":"var _jsxFileName = \"/Users/abalamurugan/Desktop/photo-app-react/src/BookmarkButton.js\";\nimport React from 'react';\nimport { getHeaders } from './utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookmarkButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleBookmark = this.toggleBookmark.bind(this);\n    this.bookmark = this.bookmark.bind(this);\n    this.unbookmark = this.unbookmark.bind(this); // this.remakePost = this.props.remakePost.bind(this);\n  }\n\n  toggleBookmark() {\n    if (this.props.bookmarkId) {\n      this.unbookmark();\n    } else {\n      this.bookmark();\n    }\n  }\n\n  bookmark() {\n    console.log(\"bookmark\"); // const postId = this.props.postId;\n\n    const url = `/api/posts/bookmarks`;\n    const postData = {\n      post_id: this.props.postId\n    };\n    fetch(url, {\n      headers: getHeaders(),\n      method: 'POST',\n      body: JSON.stringify(postData)\n    }).then(response => response.json()).then(data => {\n      this.props.refreshPost();\n    });\n  }\n\n  unbookmark() {\n    console.log(\"unbookmark\"); // const postId = this.props.postId;\n\n    const url = '/api/posts/bookmarks/' + this.props.bookmarkId;\n    fetch(url, {\n      method: 'DELETE',\n      headers: getHeaders()\n    }).then(response => response.json()).then(data => {\n      // this.props.remakePost()\n      console.log(data);\n      this.props.refreshPost();\n    });\n  }\n\n  render() {\n    const bookmarkId = this.props.bookmarkId;\n    const classFill = bookmarkId ? 'fas' : 'far';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.toggleBookmark,\n      \"aria-label\": \"Bookmark Button\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: classFill + ' fa-bookmark'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BookmarkButton;","map":{"version":3,"sources":["/Users/abalamurugan/Desktop/photo-app-react/src/BookmarkButton.js"],"names":["React","getHeaders","BookmarkButton","Component","constructor","props","toggleBookmark","bind","bookmark","unbookmark","bookmarkId","console","log","url","postData","post_id","postId","fetch","headers","method","body","JSON","stringify","then","response","json","data","refreshPost","render","classFill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,YAAzB;;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB,CALe,CAMf;AACH;;AAEDD,EAAAA,cAAc,GAAI;AACd,QAAG,KAAKD,KAAL,CAAWK,UAAd,EAA0B;AACtB,WAAKD,UAAL;AACH,KAFD,MAEO;AACH,WAAKD,QAAL;AACH;AACJ;;AACDA,EAAAA,QAAQ,GAAI;AACRG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADQ,CAER;;AACA,UAAMC,GAAG,GAAI,sBAAb;AACA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAG,KAAKV,KAAL,CAAWW;AADR,KAAjB;AAGAC,IAAAA,KAAK,CAACJ,GAAD,EAAM;AACPK,MAAAA,OAAO,EAAEjB,UAAU,EADZ;AAEPkB,MAAAA,MAAM,EAAE,MAFD;AAGPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAHC,KAAN,CAAL,CAKCS,IALD,CAKMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALlB,EAMCF,IAND,CAMMG,IAAI,IAAI;AACV,WAAKrB,KAAL,CAAWsB,WAAX;AACH,KARD;AASH;;AAEDlB,EAAAA,UAAU,GAAI;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADU,CAEV;;AACA,UAAMC,GAAG,GAAI,0BAA0B,KAAKR,KAAL,CAAWK,UAAlD;AACAO,IAAAA,KAAK,CAACJ,GAAD,EAAM;AACPM,MAAAA,MAAM,EAAE,QADD;AAEPD,MAAAA,OAAO,EAAEjB,UAAU;AAFZ,KAAN,CAAL,CAICsB,IAJD,CAIMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJlB,EAKCF,IALD,CAKMG,IAAI,IAAI;AACV;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AACA,WAAKrB,KAAL,CAAWsB,WAAX;AACH,KATD;AAUH;;AAEDC,EAAAA,MAAM,GAAI;AACN,UAAMlB,UAAU,GAAG,KAAKL,KAAL,CAAWK,UAA9B;AACA,UAAMmB,SAAS,GAAGnB,UAAU,GAAG,KAAH,GAAW,KAAvC;AACA,wBACI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,cAAtB;AACQ,oBAAW,iBADnB;AAAA,6BAQI;AAAG,QAAA,SAAS,EAAEuB,SAAS,GAAG;AAA1B;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAnEwC;;AAsE7C,eAAe3B,cAAf","sourcesContent":["import React from 'react';\nimport {getHeaders} from './utils.js';\n\nclass BookmarkButton extends React.Component { \n\n    constructor(props) {\n        super(props);\n\n        this.toggleBookmark = this.toggleBookmark.bind(this);\n        this.bookmark = this.bookmark.bind(this);\n        this.unbookmark = this.unbookmark.bind(this);\n        // this.remakePost = this.props.remakePost.bind(this);\n    }\n\n    toggleBookmark () {\n        if(this.props.bookmarkId) {\n            this.unbookmark();\n        } else {\n            this.bookmark();\n        }\n    }\n    bookmark () {\n        console.log(\"bookmark\");\n        // const postId = this.props.postId;\n        const url = `/api/posts/bookmarks`\n        const postData = {\n            post_id : this.props.postId\n        }\n        fetch(url, {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify(postData),\n        })\n        .then(response => response.json())\n        .then(data => {\n            this.props.refreshPost();\n        })\n    }\n\n    unbookmark () {\n        console.log(\"unbookmark\");\n        // const postId = this.props.postId;\n        const url =  '/api/posts/bookmarks/' + this.props.bookmarkId;\n        fetch(url, {\n            method: 'DELETE',\n            headers: getHeaders(),\n        })\n        .then(response => response.json())\n        .then(data => {\n            // this.props.remakePost()\n            console.log(data)\n            this.props.refreshPost();\n        })\n    }\n\n    render () {\n        const bookmarkId = this.props.bookmarkId;\n        const classFill = bookmarkId ? 'fas' : 'far';\n        return (\n            <button onClick={this.toggleBookmark}\n                    aria-label=\"Bookmark Button\" >\n            \n            {/* role=\"switch\"\n            className='like'\n                aria-label=\"Like Button\" \n                aria-checked={likeId ? true : false}\n                onClick={this.toggleLike}> */}\n                <i className={classFill + ' fa-bookmark'}></i>\n            </button>\n        ); \n    }\n\n}\nexport default BookmarkButton;"]},"metadata":{},"sourceType":"module"}