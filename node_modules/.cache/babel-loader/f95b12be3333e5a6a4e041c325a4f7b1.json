{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import App from'./App';import'./index.css';import{hasCsrfToken,setAccessTokenCookie}from'./utils';import{jsx as _jsx}from\"react/jsx-runtime\";function renderApp(){ReactDOM.render(/*#__PURE__*/_jsx(App,{}),document.getElementById('root'));}/**************************************************************\n * Authentication\n **************************************************************\n * There are two authentication pathways handled here:\n * 1. The hasCsrfToken() pathway is used if React is being\n *    served on the same server as the REST API (and uses the\n *    Flask server-side login form). For production deployment\n *    only.\n * \n * 2. The setAccessTokenCookie() pathway is used if you have\n *    created a stand-alone react app that is interacting with\n *    the REST API on another server. This one is the one used\n *    for testing (when using npm start).\n **************************************************************\n */ // this initializes the app after the access token is set.\nif(hasCsrfToken()&&window.location.port!=='3000'){// this executes if the app is run within flask:\nconsole.log('Authentication handled via CSRF + Http-only cookie.');renderApp();}else{console.log(window.location.port==='3000');// this executes if the app is run via npm start\nconsole.log('Authentication handled via REST API Token.');setAccessTokenCookie('webdev','password',renderApp);}","map":{"version":3,"sources":["/Users/gabebider/Documents/Northwestern Classes/2021-2022/Spring Quarter/WebDev/webdev-labs/lab10/src/index.js"],"names":["React","ReactDOM","App","hasCsrfToken","setAccessTokenCookie","renderApp","render","document","getElementById","window","location","port","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,aAAP,CACA,OAAQC,YAAR,CAAsBC,oBAAtB,KAAiD,SAAjD,C,2CAEA,QAASC,CAAAA,SAAT,EAAqB,CACjBJ,QAAQ,CAACK,MAAT,cACI,KAAC,GAAD,IADJ,CAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ,EAIH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,CAEA;AACA,GAAIL,YAAY,IAAMM,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAyB,MAA/C,CAAuD,CACnD;AACAC,OAAO,CAACC,GAAR,CAAY,qDAAZ,EACAR,SAAS,GACZ,CAJD,IAIO,CACHO,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAyB,MAArC,EACA;AACAC,OAAO,CAACC,GAAR,CAAY,4CAAZ,EACAT,oBAAoB,CAAC,QAAD,CAAW,UAAX,CAAuBC,SAAvB,CAApB,CACH","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport {hasCsrfToken, setAccessTokenCookie} from './utils';\n\nfunction renderApp() {\n    ReactDOM.render(\n        <App />,\n        document.getElementById('root')\n    );\n}\n\n/**************************************************************\n * Authentication\n **************************************************************\n * There are two authentication pathways handled here:\n * 1. The hasCsrfToken() pathway is used if React is being\n *    served on the same server as the REST API (and uses the\n *    Flask server-side login form). For production deployment\n *    only.\n * \n * 2. The setAccessTokenCookie() pathway is used if you have\n *    created a stand-alone react app that is interacting with\n *    the REST API on another server. This one is the one used\n *    for testing (when using npm start).\n **************************************************************\n */\n\n// this initializes the app after the access token is set.\nif (hasCsrfToken() && window.location.port !== '3000') {\n    // this executes if the app is run within flask:\n    console.log('Authentication handled via CSRF + Http-only cookie.')\n    renderApp();\n} else {\n    console.log(window.location.port === '3000')\n    // this executes if the app is run via npm start\n    console.log('Authentication handled via REST API Token.')\n    setAccessTokenCookie('webdev', 'password', renderApp);\n}"]},"metadata":{},"sourceType":"module"}